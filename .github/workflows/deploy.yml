name: Deploy GitHub Pages (Firebase config injection)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Inject Firebase Config
        run: |
          set -e
          file=src/firebaseConfig.js
          echo "Injecting Firebase config into $file"
          sed -i "s|%%API_KEY%%|${{ secrets.FIREBASE_API_KEY }}|g" $file
          sed -i "s|%%AUTH_DOMAIN%%|${{ secrets.FIREBASE_AUTH_DOMAIN }}|g" $file
          sed -i "s|%%PROJECT_ID%%|${{ secrets.FIREBASE_PROJECT_ID }}|g" $file
          sed -i "s|%%STORAGE_BUCKET%%|${{ secrets.FIREBASE_STORAGE_BUCKET }}|g" $file
          sed -i "s|%%MESSAGING_SENDER_ID%%|${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}|g" $file
          sed -i "s|%%APP_ID%%|${{ secrets.FIREBASE_APP_ID }}|g" $file
          if [ -n "${{ secrets.FIREBASE_MEASUREMENT_ID }}" ]; then
            sed -i "s|%%MEASUREMENT_ID%%|${{ secrets.FIREBASE_MEASUREMENT_ID }}|g" $file
          else
            sed -i "s|%%MEASUREMENT_ID%%||g" $file
          fi
          echo "Final firebaseConfig.js:" && grep -E "apiKey|projectId|appId" $file || true

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
